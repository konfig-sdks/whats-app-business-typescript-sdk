/*
WhatsApp Business API

See https://developers.facebook.com/docs/whatsapp

The version of the OpenAPI document: 1.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  ApplicationApi,
  BackupRestoreApi,
  BusinessProfileApi,
  CertificatesApi,
  ContactsApi,
  GroupsApi,
  HealthApi,
  MediaApi,
  MessagesApi,
  ProfileApi,
  RegistrationApi,
  TwoStepVerificationApi,
  UsersApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { WhatsAppBusinessCustom } from "./client-custom";

export class WhatsAppBusiness extends WhatsAppBusinessCustom {
  readonly application: ApplicationApi;
  readonly backupRestore: BackupRestoreApi;
  readonly businessProfile: BusinessProfileApi;
  readonly certificates: CertificatesApi;
  readonly contacts: ContactsApi;
  readonly groups: GroupsApi;
  readonly health: HealthApi;
  readonly media: MediaApi;
  readonly messages: MessagesApi;
  readonly profile: ProfileApi;
  readonly registration: RegistrationApi;
  readonly twoStepVerification: TwoStepVerificationApi;
  readonly users: UsersApi;

  constructor(configurationParameters: ConfigurationParameters) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.application = new ApplicationApi(configuration);
    this.backupRestore = new BackupRestoreApi(configuration);
    this.businessProfile = new BusinessProfileApi(configuration);
    this.certificates = new CertificatesApi(configuration);
    this.contacts = new ContactsApi(configuration);
    this.groups = new GroupsApi(configuration);
    this.health = new HealthApi(configuration);
    this.media = new MediaApi(configuration);
    this.messages = new MessagesApi(configuration);
    this.profile = new ProfileApi(configuration);
    this.registration = new RegistrationApi(configuration);
    this.twoStepVerification = new TwoStepVerificationApi(configuration);
    this.users = new UsersApi(configuration);
  }

}
